##############################################################################################################################
# Ideas: 1. Use 0x55555555 to get all the odd bits, and << 1
#        2. Use 0xAAAAAAAA to get all the even bits, and >> 1
#        3. merge together
# Time Complexity: O(1)
# Space Complexity: O(1)
##############################################################################################################################

def swapOddEvenBits(num):
	return ((num & 0x55555555) << 1) | ((num & 0xaaaaaaaa)>>1)

##############################################################################################################################

def main():
	print '{0:b}'.format(0b10101110100101001000101010101101)
	print '{0:b}'.format(swapOddEvenBits(0b10101110100101001000101010101101))

if __name__ == '__main__':
	main()